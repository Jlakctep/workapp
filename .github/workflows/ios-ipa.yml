name: iOS .ipa (AltStore)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'unsigned (AltStore re-signs) or signed (your certs)'
        required: true
        default: 'unsigned'
        type: choice
        options: [unsigned, signed]

jobs:
  build:
    runs-on: macos-14
    defaults:
      run:
        working-directory: WorkApp  # проект у тебя внутри WorkApp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install XcodeGen
        run: brew install xcodegen

      - name: Generate Xcode project
        run: xcodegen generate

      - name: Build (unsigned)
        if: ${{ inputs.mode == 'unsigned' }}
        run: |
          xcodebuild -scheme PMHub \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -derivedDataPath build/dd \
            build
          mkdir -p build/export/Payload
          cp -R build/dd/Build/Products/Release-iphoneos/PMHub.app build/export/Payload/PMHub.app
          cd build/export
          zip -r PMHub-unsigned.ipa Payload

      - name: Import signing certificate
        if: ${{ inputs.mode == 'signed' }}
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}

      - name: Install provisioning profile
        if: ${{ inputs.mode == 'signed' }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.MOBILEPROVISION_BASE64 }}" | base64 --decode > "~/Library/MobileDevice/Provisioning Profiles/${{ secrets.PROVISIONING_PROFILE_NAME }}.mobileprovision"

      - name: Archive (signed)
        if: ${{ inputs.mode == 'signed' }}
        run: |
          xcodebuild -scheme PMHub \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath build/PMHub.xcarchive \
            PRODUCT_BUNDLE_IDENTIFIER=${{ secrets.APP_BUNDLE_ID }} \
            DEVELOPMENT_TEAM=${{ secrets.APPLE_TEAM_ID }} \
            PROVISIONING_PROFILE_SPECIFIER='${{ secrets.PROVISIONING_PROFILE_NAME }}' \
            clean archive

      - name: Prepare exportOptions (signed)
        if: ${{ inputs.mode == 'signed' }}
        run: |
          mkdir -p build/export
          sed -e "s/\$(TEAM_ID)/${{ secrets.APPLE_TEAM_ID }}/g" ci/exportOptions.plist > build/export/exportOptions.resolved.plist

      - name: Export .ipa (signed)
        if: ${{ inputs.mode == 'signed' }}
        run: |
          xcodebuild -exportArchive \
            -archivePath build/PMHub.xcarchive \
            -exportPath build/export \
            -exportOptionsPlist build/export/exportOptions.resolved.plist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PMHub.ipa
          path: WorkApp/build/export/*.ipa